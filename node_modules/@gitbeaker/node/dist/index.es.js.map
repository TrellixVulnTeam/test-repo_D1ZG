{"version":3,"file":"index.es.js","sources":["../src/GotRequester.ts","../src/index.ts"],"sourcesContent":["import Got from 'got';\nimport { decamelizeKeys } from 'xcase';\nimport {\n  DefaultServiceOptions,\n  DefaultRequestReturn,\n  DefaultRequestOptions,\n  createRequesterFn,\n  defaultOptionsHandler as baseOptionsHandler,\n  wait,\n} from '@gitbeaker/requester-utils';\n\nexport function defaultOptionsHandler(\n  serviceOptions: DefaultServiceOptions,\n  { body, query, sudo, method }: DefaultRequestOptions = {},\n): DefaultRequestReturn & {\n  json?: Record<string, unknown>;\n  https?: { rejectUnauthorized: boolean };\n} {\n  const options: DefaultRequestReturn & {\n    json?: Record<string, unknown>;\n    https?: { rejectUnauthorized: boolean };\n  } = baseOptionsHandler(serviceOptions, { body, query, sudo, method });\n\n  // FIXME: Not the best comparison, but...it will have to do for now.\n  if (typeof body === 'object' && body.constructor.name !== 'FormData') {\n    options.json = decamelizeKeys(body);\n\n    delete options.body;\n  }\n\n  if (\n    serviceOptions.url.includes('https') &&\n    serviceOptions.rejectUnauthorized != null &&\n    serviceOptions.rejectUnauthorized === false\n  ) {\n    options.https = {\n      rejectUnauthorized: serviceOptions.rejectUnauthorized,\n    };\n  }\n\n  return options;\n}\n\nexport function processBody({\n  rawBody,\n  headers,\n}: {\n  rawBody: Buffer;\n  headers: Record<string, unknown>;\n}) {\n  // Split to remove potential charset info from the content type\n  const contentType = ((headers['content-type'] as string) || '').split(';')[0].trim();\n\n  if (contentType === 'application/json') {\n    return rawBody.length === 0 ? {} : JSON.parse(rawBody.toString());\n  }\n\n  if (contentType.startsWith('text/')) {\n    return rawBody.toString();\n  }\n\n  return Buffer.from(rawBody);\n}\n\nexport async function handler(endpoint: string, options: Record<string, unknown>) {\n  const retryCodes = [429, 502];\n  const maxRetries = 10;\n  let response;\n\n  for (let i = 0; i < maxRetries; i += 1) {\n    const waitTime = 2 ** i * 0.1;\n    try {\n      if (options.method === 'stream') {\n        options.method = 'get';\n        options.isStream = true;\n        return Got(endpoint, options);\n      }\n      response = await Got(endpoint, options); // eslint-disable-line\n      break;\n    } catch (e) {\n      if (e.response) {\n        if (retryCodes.includes(e.response.statusCode)) {\n          await wait(waitTime); // eslint-disable-line\n          continue; // eslint-disable-line\n        }\n\n        if (typeof e.response.body === 'string' && e.response.body.length > 0) {\n          try {\n            const output = JSON.parse(e.response.body);\n            e.description = output.error || output.message;\n          } catch (err) {\n            e.description = e.response.body;\n          }\n        }\n      }\n\n      throw e;\n    }\n  }\n\n  const { statusCode, headers } = response;\n\n  const body = processBody(response);\n\n  return { body, headers, status: statusCode };\n}\n\nexport const requesterFn = createRequesterFn(defaultOptionsHandler, handler);\n","import * as Gitbeaker from '@gitbeaker/core';\nimport { modifyServices } from '@gitbeaker/requester-utils';\nimport { requesterFn } from './GotRequester';\n\nconst { getAPIMap, ...services } = Gitbeaker;\nconst APIServices = modifyServices(services, { requesterFn });\n\nexport const {\n  // Groups\n  Groups,\n  GroupAccessRequests,\n  GroupBadges,\n  GroupCustomAttributes,\n  GroupIssueBoards,\n  GroupMembers,\n  GroupMilestones,\n  GroupRunners,\n  GroupVariables,\n  GroupLabels,\n  Epics,\n  EpicIssues,\n  EpicNotes,\n  EpicDiscussions,\n\n  // Users\n  Users,\n  UserCustomAttributes,\n  UserEmails,\n  UserImpersonationTokens,\n  UserSSHKeys,\n  UserGPGKeys,\n\n  // Projects\n  Branches,\n  Commits,\n  CommitDiscussions,\n  ContainerRegistry,\n  Deployments,\n  DeployKeys,\n  Environments,\n  FreezePeriods,\n  Issues,\n  IssuesStatistics,\n  IssueNotes,\n  IssueNoteAwardEmojis,\n  IssueDiscussions,\n  IssueAwardEmojis,\n  Jobs,\n  Labels,\n  MergeRequests,\n  MergeRequestApprovals,\n  MergeRequestAwardEmojis,\n  MergeRequestDiscussions,\n  MergeRequestNotes,\n  Packages,\n  Pipelines,\n  PipelineSchedules,\n  PipelineScheduleVariables,\n  Projects,\n  ProjectAccessRequests,\n  ProjectBadges,\n  ProjectCustomAttributes,\n  ProjectImportExport,\n  ProjectIssueBoards,\n  ProjectHooks,\n  ProjectMembers,\n  ProjectMilestones,\n  ProjectSnippets,\n  ProjectSnippetNotes,\n  ProjectSnippetDiscussions,\n  ProjectSnippetAwardEmojis,\n  ProtectedBranches,\n  ProtectedTags,\n  ProjectVariables,\n  PushRules,\n  Releases,\n  ReleaseLinks,\n  Repositories,\n  RepositoryFiles,\n  Runners,\n  Services,\n  Tags,\n  Todos,\n  Triggers,\n  VulnerabilityFindings,\n\n  // Genral\n  ApplicationSettings,\n  BroadcastMessages,\n  Events,\n  FeatureFlags,\n  GeoNodes,\n  GitignoreTemplates,\n  GitLabCIYMLTemplates,\n  Keys,\n  License,\n  LicenseTemplates,\n  Lint,\n  Namespaces,\n  NotificationSettings,\n  Markdown,\n  PagesDomains,\n  Search,\n  SidekiqMetrics,\n  Snippets,\n  SystemHooks,\n  Version,\n  Wikis,\n\n  // Bundles\n  GroupsBundle,\n  UsersBundle,\n  ProjectsBundle,\n  Gitlab,\n} = APIServices;\n"],"names":["baseOptionsHandler"],"mappings":";;;;;+BAYE,gBACA,CAAE,MAAM,OAAO,MAAM,UAAkC,IAIvD;AACA,QAAM,UAGFA,wBAAmB,gBAAgB,CAAE,MAAM,OAAO,MAAM;AAG5D,MAAI,OAAO,SAAS,YAAY,KAAK,YAAY,SAAS,YAAY;AACpE,YAAQ,OAAO,eAAe;AAE9B,WAAO,QAAQ;AAAA;AAGjB,MACE,eAAe,IAAI,SAAS,YAC5B,eAAe,sBAAsB,QACrC,eAAe,uBAAuB,OACtC;AACA,YAAQ,QAAQ;AAAA,MACd,oBAAoB,eAAe;AAAA;AAAA;AAIvC,SAAO;AAAA;qBAGmB;AAAA,EAC1B;AAAA,EACA;AAAA,GAIC;AAED,QAAM,cAAgB,SAAQ,mBAA8B,IAAI,MAAM,KAAK,GAAG;AAE9E,MAAI,gBAAgB,oBAAoB;AACtC,WAAO,QAAQ,WAAW,IAAI,KAAK,KAAK,MAAM,QAAQ;AAAA;AAGxD,MAAI,YAAY,WAAW,UAAU;AACnC,WAAO,QAAQ;AAAA;AAGjB,SAAO,OAAO,KAAK;AAAA;uBAGS,UAAkB,SAAkC;AAChF,QAAM,aAAa,CAAC,KAAK;AACzB,QAAM,aAAa;AACnB,MAAI;AAEJ,WAAS,IAAI,GAAG,IAAI,YAAY,KAAK,GAAG;AACtC,UAAM,WAAW,KAAK,IAAI;AAC1B,QAAI;AACF,UAAI,QAAQ,WAAW,UAAU;AAC/B,gBAAQ,SAAS;AACjB,gBAAQ,WAAW;AACnB,eAAO,IAAI,UAAU;AAAA;AAEvB,iBAAW,MAAM,IAAI,UAAU;AAC/B;AAAA,aACO,GAAP;AACA,UAAI,EAAE,UAAU;AACd,YAAI,WAAW,SAAS,EAAE,SAAS,aAAa;AAC9C,gBAAM,KAAK;AACX;AAAA;AAGF,YAAI,OAAO,EAAE,SAAS,SAAS,YAAY,EAAE,SAAS,KAAK,SAAS,GAAG;AACrE,cAAI;AACF,kBAAM,SAAS,KAAK,MAAM,EAAE,SAAS;AACrC,cAAE,cAAc,OAAO,SAAS,OAAO;AAAA,mBAChC,KAAP;AACA,cAAE,cAAc,EAAE,SAAS;AAAA;AAAA;AAAA;AAKjC,YAAM;AAAA;AAAA;AAIV,QAAM,CAAE,YAAY,WAAY;AAEhC,QAAM,OAAO,YAAY;AAEzB,SAAO,CAAE,MAAM,SAAS,QAAQ;AAAA;MAGrB,cAAc,kBAAkB,uBAAuB;;;;;;;;;;;;;;;;;MCvGjC,gBAAb,qBAAa,IAAb,CAAd;AACR,MAAM,cAAc,eAAe,UAAU,CAAE;MAEl}