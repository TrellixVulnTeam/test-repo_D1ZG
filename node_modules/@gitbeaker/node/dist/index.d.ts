import * as packages_gitbeaker_core_src_services from 'packages/gitbeaker-core/src/services';
import * as packages_gitbeaker_core_src_infrastructure from 'packages/gitbeaker-core/src/infrastructure';
import * as Gitbeaker from '@gitbeaker/core';

declare const Groups: typeof Gitbeaker.Groups;
declare const GroupAccessRequests: typeof Gitbeaker.GroupAccessRequests;
declare const GroupBadges: typeof Gitbeaker.GroupBadges;
declare const GroupCustomAttributes: typeof Gitbeaker.GroupCustomAttributes;
declare const GroupIssueBoards: typeof Gitbeaker.GroupIssueBoards;
declare const GroupMembers: typeof Gitbeaker.GroupMembers;
declare const GroupMilestones: typeof Gitbeaker.GroupMilestones;
declare const GroupRunners: typeof Gitbeaker.GroupRunners;
declare const GroupVariables: typeof Gitbeaker.GroupVariables;
declare const GroupLabels: typeof Gitbeaker.GroupLabels;
declare const Epics: typeof Gitbeaker.Epics;
declare const EpicIssues: typeof Gitbeaker.EpicIssues;
declare const EpicNotes: typeof Gitbeaker.EpicNotes;
declare const EpicDiscussions: typeof Gitbeaker.EpicDiscussions;
declare const Users: typeof Gitbeaker.Users;
declare const UserCustomAttributes: typeof Gitbeaker.UserCustomAttributes;
declare const UserEmails: typeof Gitbeaker.UserEmails;
declare const UserImpersonationTokens: typeof Gitbeaker.UserImpersonationTokens;
declare const UserSSHKeys: typeof Gitbeaker.UserSSHKeys;
declare const UserGPGKeys: typeof Gitbeaker.UserGPGKeys;
declare const Branches: typeof Gitbeaker.Branches;
declare const Commits: typeof Gitbeaker.Commits;
declare const CommitDiscussions: typeof Gitbeaker.CommitDiscussions;
declare const ContainerRegistry: typeof Gitbeaker.ContainerRegistry;
declare const Deployments: typeof Gitbeaker.Deployments;
declare const DeployKeys: typeof Gitbeaker.DeployKeys;
declare const Environments: typeof Gitbeaker.Environments;
declare const FreezePeriods: typeof Gitbeaker.FreezePeriods;
declare const Issues: typeof Gitbeaker.Issues;
declare const IssuesStatistics: typeof Gitbeaker.IssuesStatistics;
declare const IssueNotes: typeof Gitbeaker.IssueNotes;
declare const IssueNoteAwardEmojis: typeof Gitbeaker.IssueNoteAwardEmojis;
declare const IssueDiscussions: typeof Gitbeaker.IssueDiscussions;
declare const IssueAwardEmojis: typeof Gitbeaker.IssueAwardEmojis;
declare const Jobs: typeof Gitbeaker.Jobs;
declare const Labels: typeof Gitbeaker.Labels;
declare const MergeRequests: typeof Gitbeaker.MergeRequests;
declare const MergeRequestApprovals: typeof Gitbeaker.MergeRequestApprovals;
declare const MergeRequestAwardEmojis: typeof Gitbeaker.MergeRequestAwardEmojis;
declare const MergeRequestDiscussions: typeof Gitbeaker.MergeRequestDiscussions;
declare const MergeRequestNotes: typeof Gitbeaker.MergeRequestNotes;
declare const Packages: typeof Gitbeaker.Packages;
declare const Pipelines: typeof Gitbeaker.Pipelines;
declare const PipelineSchedules: typeof Gitbeaker.PipelineSchedules;
declare const PipelineScheduleVariables: typeof Gitbeaker.PipelineScheduleVariables;
declare const Projects: typeof Gitbeaker.Projects;
declare const ProjectAccessRequests: typeof Gitbeaker.ProjectAccessRequests;
declare const ProjectBadges: typeof Gitbeaker.ProjectBadges;
declare const ProjectCustomAttributes: typeof Gitbeaker.ProjectCustomAttributes;
declare const ProjectImportExport: typeof Gitbeaker.ProjectImportExport;
declare const ProjectIssueBoards: typeof Gitbeaker.ProjectIssueBoards;
declare const ProjectHooks: typeof Gitbeaker.ProjectHooks;
declare const ProjectMembers: typeof Gitbeaker.ProjectMembers;
declare const ProjectMilestones: typeof Gitbeaker.ProjectMilestones;
declare const ProjectSnippets: typeof Gitbeaker.ProjectSnippets;
declare const ProjectSnippetNotes: typeof Gitbeaker.ProjectSnippetNotes;
declare const ProjectSnippetDiscussions: typeof Gitbeaker.ProjectSnippetDiscussions;
declare const ProjectSnippetAwardEmojis: typeof Gitbeaker.ProjectSnippetAwardEmojis;
declare const ProtectedBranches: typeof Gitbeaker.ProtectedBranches;
declare const ProtectedTags: typeof Gitbeaker.ProtectedTags;
declare const ProjectVariables: typeof Gitbeaker.ProjectVariables;
declare const PushRules: typeof Gitbeaker.PushRules;
declare const Releases: typeof Gitbeaker.Releases;
declare const ReleaseLinks: typeof Gitbeaker.ReleaseLinks;
declare const Repositories: typeof Gitbeaker.Repositories;
declare const RepositoryFiles: typeof Gitbeaker.RepositoryFiles;
declare const Runners: typeof Gitbeaker.Runners;
declare const Services: typeof Gitbeaker.Services;
declare const Tags: typeof Gitbeaker.Tags;
declare const Todos: typeof Gitbeaker.Todos;
declare const Triggers: typeof Gitbeaker.Triggers;
declare const VulnerabilityFindings: typeof Gitbeaker.VulnerabilityFindings;
declare const ApplicationSettings: typeof Gitbeaker.ApplicationSettings;
declare const BroadcastMessages: typeof Gitbeaker.BroadcastMessages;
declare const Events: typeof Gitbeaker.Events;
declare const FeatureFlags: typeof Gitbeaker.FeatureFlags;
declare const GeoNodes: typeof Gitbeaker.GeoNodes;
declare const GitignoreTemplates: typeof Gitbeaker.GitignoreTemplates;
declare const GitLabCIYMLTemplates: typeof Gitbeaker.GitLabCIYMLTemplates;
declare const Keys: typeof Gitbeaker.Keys;
declare const License: typeof Gitbeaker.License;
declare const LicenseTemplates: typeof Gitbeaker.LicenseTemplates;
declare const Lint: typeof Gitbeaker.Lint;
declare const Namespaces: typeof Gitbeaker.Namespaces;
declare const NotificationSettings: typeof Gitbeaker.NotificationSettings;
declare const Markdown: typeof Gitbeaker.Markdown;
declare const PagesDomains: typeof Gitbeaker.PagesDomains;
declare const Search: typeof Gitbeaker.Search;
declare const SidekiqMetrics: typeof Gitbeaker.SidekiqMetrics;
declare const Snippets: typeof Gitbeaker.Snippets;
declare const SystemHooks: typeof Gitbeaker.SystemHooks;
declare const Version: typeof Gitbeaker.Version;
declare const Wikis: typeof Gitbeaker.Wikis;
declare const GroupsBundle: packages_gitbeaker_core_src_infrastructure.BundleType<{
    Groups: typeof Gitbeaker.Groups;
    GroupAccessRequests: typeof Gitbeaker.GroupAccessRequests;
    GroupBadges: typeof Gitbeaker.GroupBadges;
    GroupCustomAttributes: typeof Gitbeaker.GroupCustomAttributes;
    GroupIssueBoards: typeof Gitbeaker.GroupIssueBoards;
    GroupMembers: typeof Gitbeaker.GroupMembers;
    GroupMilestones: typeof Gitbeaker.GroupMilestones;
    GroupRunners: typeof Gitbeaker.GroupRunners;
    GroupVariables: typeof Gitbeaker.GroupVariables;
    GroupLabels: typeof Gitbeaker.GroupLabels;
    GroupDeployTokens: typeof Gitbeaker.GroupDeployTokens;
    Epics: typeof Gitbeaker.Epics;
    EpicIssues: typeof Gitbeaker.EpicIssues;
    EpicNotes: typeof Gitbeaker.EpicNotes;
    EpicDiscussions: typeof Gitbeaker.EpicDiscussions;
}, "Groups" | "GroupAccessRequests" | "GroupBadges" | "GroupCustomAttributes" | "GroupIssueBoards" | "GroupMembers" | "GroupMilestones" | "GroupRunners" | "GroupVariables" | "GroupLabels" | "GroupDeployTokens" | "Epics" | "EpicIssues" | "EpicNotes" | "EpicDiscussions">;
declare const UsersBundle: packages_gitbeaker_core_src_infrastructure.BundleType<{
    Users: typeof Gitbeaker.Users;
    UserCustomAttributes: typeof Gitbeaker.UserCustomAttributes;
    UserEmails: typeof Gitbeaker.UserEmails;
    UserImpersonationTokens: typeof Gitbeaker.UserImpersonationTokens;
    UserSSHKeys: typeof Gitbeaker.UserSSHKeys;
    UserGPGKeys: typeof Gitbeaker.UserGPGKeys;
}, "Users" | "UserCustomAttributes" | "UserEmails" | "UserImpersonationTokens" | "UserSSHKeys" | "UserGPGKeys">;
declare const ProjectsBundle: packages_gitbeaker_core_src_infrastructure.BundleType<{
    Branches: typeof Gitbeaker.Branches;
    Commits: typeof Gitbeaker.Commits;
    CommitDiscussions: typeof Gitbeaker.CommitDiscussions;
    ContainerRegistry: typeof Gitbeaker.ContainerRegistry;
    DeployKeys: typeof Gitbeaker.DeployKeys;
    Deployments: typeof Gitbeaker.Deployments;
    Environments: typeof Gitbeaker.Environments;
    FreezePeriods: typeof Gitbeaker.FreezePeriods;
    Issues: typeof Gitbeaker.Issues;
    IssuesStatistics: typeof Gitbeaker.IssuesStatistics;
    IssueAwardEmojis: typeof Gitbeaker.IssueAwardEmojis;
    IssueNotes: typeof Gitbeaker.IssueNotes;
    IssueNoteAwardEmojis: typeof Gitbeaker.IssueNoteAwardEmojis;
    IssueDiscussions: typeof Gitbeaker.IssueDiscussions;
    Jobs: typeof Gitbeaker.Jobs;
    Labels: typeof Gitbeaker.Labels;
    MergeRequests: typeof Gitbeaker.MergeRequests;
    MergeRequestApprovals: typeof Gitbeaker.MergeRequestApprovals;
    MergeRequestAwardEmojis: typeof Gitbeaker.MergeRequestAwardEmojis;
    MergeRequestDiscussions: typeof Gitbeaker.MergeRequestDiscussions;
    MergeRequestNotes: typeof Gitbeaker.MergeRequestNotes;
    Packages: typeof Gitbeaker.Packages;
    Pipelines: typeof Gitbeaker.Pipelines;
    PipelineSchedules: typeof Gitbeaker.PipelineSchedules;
    PipelineScheduleVariables: typeof Gitbeaker.PipelineScheduleVariables;
    Projects: typeof Gitbeaker.Projects;
    ProjectAccessRequests: typeof Gitbeaker.ProjectAccessRequests;
    ProjectBadges: typeof Gitbeaker.ProjectBadges;
    ProjectCustomAttributes: typeof Gitbeaker.ProjectCustomAttributes;
    ProjectImportExport: typeof Gitbeaker.ProjectImportExport;
    ProjectIssueBoards: typeof Gitbeaker.ProjectIssueBoards;
    ProjectHooks: typeof Gitbeaker.ProjectHooks;
    ProjectMembers: typeof Gitbeaker.ProjectMembers;
    ProjectMilestones: typeof Gitbeaker.ProjectMilestones;
    ProjectSnippets: typeof Gitbeaker.ProjectSnippets;
    ProjectSnippetNotes: typeof Gitbeaker.ProjectSnippetNotes;
    ProjectSnippetDiscussions: typeof Gitbeaker.ProjectSnippetDiscussions;
    ProjectSnippetAwardEmojis: typeof Gitbeaker.ProjectSnippetAwardEmojis;
    ProtectedBranches: typeof Gitbeaker.ProtectedBranches;
    ProtectedTags: typeof Gitbeaker.ProtectedTags;
    ProjectVariables: typeof Gitbeaker.ProjectVariables;
    ProjectDeployTokens: typeof Gitbeaker.ProjectDeployTokens;
    PushRules: typeof Gitbeaker.PushRules;
    Releases: typeof Gitbeaker.Releases;
    ReleaseLinks: typeof Gitbeaker.ReleaseLinks;
    Repositories: typeof Gitbeaker.Repositories;
    RepositoryFiles: typeof Gitbeaker.RepositoryFiles;
    Runners: typeof Gitbeaker.Runners;
    Services: typeof Gitbeaker.Services;
    Tags: typeof Gitbeaker.Tags;
    Todos: typeof Gitbeaker.Todos;
    Triggers: typeof Gitbeaker.Triggers;
    VulnerabilityFindings: typeof Gitbeaker.VulnerabilityFindings;
}, "Branches" | "Commits" | "CommitDiscussions" | "ContainerRegistry" | "DeployKeys" | "Deployments" | "Environments" | "FreezePeriods" | "Issues" | "IssuesStatistics" | "IssueAwardEmojis" | "IssueNotes" | "IssueNoteAwardEmojis" | "IssueDiscussions" | "Jobs" | "Labels" | "MergeRequests" | "MergeRequestApprovals" | "MergeRequestAwardEmojis" | "MergeRequestDiscussions" | "MergeRequestNotes" | "Packages" | "Pipelines" | "PipelineSchedules" | "PipelineScheduleVariables" | "Projects" | "ProjectAccessRequests" | "ProjectBadges" | "ProjectCustomAttributes" | "ProjectImportExport" | "ProjectIssueBoards" | "ProjectHooks" | "ProjectMembers" | "ProjectMilestones" | "ProjectSnippets" | "ProjectSnippetNotes" | "ProjectSnippetDiscussions" | "ProjectSnippetAwardEmojis" | "ProtectedBranches" | "ProtectedTags" | "ProjectVariables" | "ProjectDeployTokens" | "PushRules" | "Releases" | "ReleaseLinks" | "Repositories" | "RepositoryFiles" | "Runners" | "Services" | "Tags" | "Todos" | "Triggers" | "VulnerabilityFindings">;
declare const Gitlab: packages_gitbeaker_core_src_infrastructure.BundleType<typeof packages_gitbeaker_core_src_services, "Groups" | "GroupAccessRequests" | "GroupBadges" | "GroupCustomAttributes" | "GroupIssueBoards" | "GroupMembers" | "GroupMilestones" | "GroupRunners" | "GroupVariables" | "GroupLabels" | "GroupDeployTokens" | "Epics" | "EpicIssues" | "EpicNotes" | "EpicDiscussions" | "Users" | "UserCustomAttributes" | "UserEmails" | "UserImpersonationTokens" | "UserSSHKeys" | "UserGPGKeys" | "Branches" | "Commits" | "CommitDiscussions" | "ContainerRegistry" | "DeployKeys" | "Deployments" | "Environments" | "FreezePeriods" | "Issues" | "IssuesStatistics" | "IssueAwardEmojis" | "IssueNotes" | "IssueNoteAwardEmojis" | "IssueDiscussions" | "Jobs" | "Labels" | "MergeRequests" | "MergeRequestApprovals" | "MergeRequestAwardEmojis" | "MergeRequestDiscussions" | "MergeRequestNotes" | "Packages" | "Pipelines" | "PipelineSchedules" | "PipelineScheduleVariables" | "Projects" | "ProjectAccessRequests" | "ProjectBadges" | "ProjectCustomAttributes" | "ProjectImportExport" | "ProjectIssueBoards" | "ProjectHooks" | "ProjectMembers" | "ProjectMilestones" | "ProjectSnippets" | "ProjectSnippetNotes" | "ProjectSnippetDiscussions" | "ProjectSnippetAwardEmojis" | "ProtectedBranches" | "ProtectedTags" | "ProjectVariables" | "ProjectDeployTokens" | "PushRules" | "Releases" | "ReleaseLinks" | "Repositories" | "RepositoryFiles" | "Runners" | "Services" | "Tags" | "Todos" | "Triggers" | "VulnerabilityFindings" | "ApplicationSettings" | "BroadcastMessages" | "Events" | "FeatureFlags" | "GeoNodes" | "GitignoreTemplates" | "GitLabCIYMLTemplates" | "Keys" | "License" | "LicenseTemplates" | "Lint" | "Namespaces" | "NotificationSettings" | "Markdown" | "PagesDomains" | "Search" | "SidekiqMetrics" | "Snippets" | "SystemHooks" | "Version" | "Wikis">;

export { ApplicationSettings, Branches, BroadcastMessages, CommitDiscussions, Commits, ContainerRegistry, DeployKeys, Deployments, Environments, EpicDiscussions, EpicIssues, EpicNotes, Epics, Events, FeatureFlags, FreezePeriods, GeoNodes, GitLabCIYMLTemplates, GitignoreTemplates, Gitlab, GroupAccessRequests, GroupBadges, GroupCustomAttributes, GroupIssueBoards, GroupLabels, GroupMembers, GroupMilestones, GroupRunners, GroupVariables, Groups, GroupsBundle, IssueAwardEmojis, IssueDiscussions, IssueNoteAwardEmojis, IssueNotes, Issues, IssuesStatistics, Jobs, Keys, Labels, License, LicenseTemplates, Lint, Markdown, MergeRequestApprovals, MergeRequestAwardEmojis, MergeRequestDiscussions, MergeRequestNotes, MergeRequests, Namespaces, NotificationSettings, Packages, PagesDomains, PipelineScheduleVariables, PipelineSchedules, Pipelines, ProjectAccessRequests, ProjectBadges, ProjectCustomAttributes, ProjectHooks, ProjectImportExport, ProjectIssueBoards, ProjectMembers, ProjectMilestones, ProjectSnippetAwardEmojis, ProjectSnippetDiscussions, ProjectSnippetNotes, ProjectSnippets, ProjectVariables, Projects, ProjectsBundle, ProtectedBranches, ProtectedTags, PushRules, ReleaseLinks, Releases, Repositories, RepositoryFiles, Runners, Search, Services, SidekiqMetrics, Snippets, SystemHooks, Tags, Todos, Triggers, UserCustomAttributes, UserEmails, UserGPGKeys, UserImpersonationTokens, UserSSHKeys, Users, UsersBundle, Version, VulnerabilityFindings, Wikis };
