{"version":3,"file":"index.esm.js","sources":["../src/api/CircleCIApi.ts","../src/route-refs.tsx","../src/plugin.ts","../src/components/BuildWithStepsPage/lib/ActionOutput/ActionOutput.tsx","../src/state/useAsyncPolling.ts","../src/constants.ts","../src/state/useBuilds.ts","../src/state/useBuildWithSteps.ts","../src/components/BuildWithStepsPage/BuildWithStepsPage.tsx","../src/util/time.ts","../src/components/BuildsPage/lib/CITable/CITable.tsx","../src/components/BuildsPage/lib/Builds/Builds.tsx","../src/components/BuildsPage/BuildsPage.tsx","../src/components/Router.tsx"],"sourcesContent":["/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CircleCIOptions,\n  getMe,\n  getBuildSummaries,\n  getFullBuild,\n  postBuildActions,\n  BuildAction,\n  BuildWithSteps,\n  BuildStepAction,\n  BuildSummary,\n  GitType,\n} from 'circleci-api';\nimport { createApiRef, DiscoveryApi } from '@backstage/core';\n\nexport { GitType };\nexport type { BuildWithSteps, BuildStepAction, BuildSummary };\n\nexport const circleCIApiRef = createApiRef<CircleCIApi>({\n  id: 'plugin.circleci.service',\n  description: 'Used by the CircleCI plugin to make requests',\n});\n\nconst DEFAULT_PROXY_PATH = '/circleci/api';\n\ntype Options = {\n  discoveryApi: DiscoveryApi;\n  /**\n   * Path to use for requests via the proxy, defaults to /circleci/api\n   */\n  proxyPath?: string;\n};\n\nexport class CircleCIApi {\n  private readonly discoveryApi: DiscoveryApi;\n  private readonly proxyPath: string;\n\n  constructor(options: Options) {\n    this.discoveryApi = options.discoveryApi;\n    this.proxyPath = options.proxyPath ?? DEFAULT_PROXY_PATH;\n  }\n\n  async retry(buildNumber: number, options: Partial<CircleCIOptions>) {\n    return postBuildActions('', buildNumber, BuildAction.RETRY, {\n      circleHost: await this.getApiUrl(),\n      ...options.vcs,\n    });\n  }\n\n  async getBuilds(\n    { limit = 10, offset = 0 }: { limit: number; offset: number },\n    options: Partial<CircleCIOptions>,\n  ) {\n    return getBuildSummaries('', {\n      options: {\n        limit,\n        offset,\n      },\n      vcs: {},\n      circleHost: await this.getApiUrl(),\n      ...options,\n    });\n  }\n\n  async getUser(options: Partial<CircleCIOptions>) {\n    return getMe('', { circleHost: await this.getApiUrl(), ...options });\n  }\n\n  async getBuild(buildNumber: number, options: Partial<CircleCIOptions>) {\n    return getFullBuild('', buildNumber, {\n      circleHost: await this.getApiUrl(),\n      ...options.vcs,\n    });\n  }\n\n  private async getApiUrl() {\n    const proxyUrl = await this.discoveryApi.getBaseUrl('proxy');\n    return proxyUrl + this.proxyPath;\n  }\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { createRouteRef } from '@backstage/core';\nimport { SvgIcon, SvgIconProps } from '@material-ui/core';\n\nconst CircleCIIcon = (props: SvgIconProps) => (\n  <SvgIcon\n    {...props}\n    enableBackground=\"new 0 0 200 200\"\n    viewBox=\"0 0 103.8 105.2\"\n  >\n    <path\n      d=\"m38.6 52.6c0-6.9 5.6-12.5 12.5-12.5s12.5 5.6 12.5 12.5-5.6 12.5-12.5 12.5c-6.9.1-12.5-5.6-12.5-12.5zm12.5-52.6c-24.6 0-45.2 16.8-51 39.6 0 .2-.1.3-.1.5 0 1.4 1.1 2.5 2.5 2.5h21.2c1 0 1.9-.6 2.3-1.5 4.4-9.5 13.9-16.1 25.1-16.1 15.2 0 27.6 12.4 27.6 27.6s-12.4 27.6-27.6 27.6c-11.1 0-20.7-6.6-25.1-16.1-.4-.9-1.3-1.5-2.3-1.5h-21.2c-1.4 0-2.5 1.1-2.5 2.5 0 .2 0 .3.1.5 5.8 22.8 26.4 39.6 51 39.6 29.1 0 52.7-23.6 52.7-52.7 0-29-23.6-52.5-52.7-52.5z\"\n      fill=\"#343434\"\n    />\n  </SvgIcon>\n);\n\nexport const circleCIRouteRef = createRouteRef({\n  icon: CircleCIIcon,\n  path: '',\n  title: 'CircleCI | All builds',\n});\n\nexport const circleCIBuildRouteRef = createRouteRef({\n  path: ':buildId',\n  title: 'CircleCI | Build info',\n});\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createPlugin,\n  createApiFactory,\n  discoveryApiRef,\n  createRoutableExtension,\n} from '@backstage/core';\nimport { circleCIApiRef, CircleCIApi } from './api';\nimport { circleCIRouteRef } from './route-refs';\n\nexport const circleCIPlugin = createPlugin({\n  id: 'circleci',\n  apis: [\n    createApiFactory({\n      api: circleCIApiRef,\n      deps: { discoveryApi: discoveryApiRef },\n      factory: ({ discoveryApi }) => new CircleCIApi({ discoveryApi }),\n    }),\n  ],\n});\n\nexport const EntityCircleCIContent = circleCIPlugin.provide(\n  createRoutableExtension({\n    component: () => import('./components/Router').then(m => m.Router),\n    mountPoint: circleCIRouteRef,\n  }),\n);\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  LinearProgress,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { BuildStepAction } from 'circleci-api';\nimport moment from 'moment';\nimport React, { Suspense, useEffect, useState } from 'react';\n\nconst LazyLog = React.lazy(() => import('react-lazylog/build/LazyLog'));\nmoment.relativeTimeThreshold('ss', 0);\nconst useStyles = makeStyles({\n  accordionDetails: {\n    padding: 0,\n  },\n  button: {\n    order: -1,\n    marginRight: 0,\n    marginLeft: '-20px',\n  },\n});\n\nexport const ActionOutput = ({\n  url,\n  name,\n  className,\n  action,\n}: {\n  url: string;\n  name: string;\n  className?: string;\n  action: BuildStepAction;\n}) => {\n  const classes = useStyles();\n\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    fetch(url)\n      .then(res => res.json())\n      .then(actionOutput => {\n        if (typeof actionOutput !== 'undefined') {\n          setMessages(\n            actionOutput.map(({ message }: { message: string }) => message),\n          );\n        }\n      });\n  }, [url]);\n\n  const timeElapsed = moment\n    .duration(\n      moment(action.end_time || moment()).diff(moment(action.start_time)),\n    )\n    .humanize();\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }} className={className}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls={`panel-${name}-content`}\n        id={`panel-${name}-header`}\n        IconButtonProps={{\n          className: classes.button,\n        }}\n      >\n        <Typography variant=\"button\">\n          {name} ({timeElapsed})\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.accordionDetails}>\n        {messages.length === 0 ? (\n          'Nothing here...'\n        ) : (\n          <Suspense fallback={<LinearProgress />}>\n            <div style={{ height: '20vh', width: '100%' }}>\n              <LazyLog text={messages.join('\\n')} extraLines={1} enableSearch />\n            </div>\n          </Suspense>\n        )}\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useRef } from 'react';\n\nexport const useAsyncPolling = (\n  pollingFn: () => Promise<any>,\n  interval: number,\n) => {\n  const isPolling = useRef<boolean>(false);\n  const startPolling = async () => {\n    if (isPolling.current === true) return;\n    isPolling.current = true;\n\n    while (isPolling.current === true) {\n      await pollingFn();\n      await new Promise(resolve => setTimeout(resolve, interval));\n    }\n  };\n\n  const stopPolling = () => {\n    isPolling.current = false;\n  };\n  return { startPolling, stopPolling };\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const CIRCLECI_ANNOTATION = 'circleci.com/project-slug';\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { errorApiRef, useApi } from '@backstage/core';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { BuildSummary, GitType } from 'circleci-api';\nimport { getOr } from 'lodash/fp';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useAsyncRetry } from 'react-use';\nimport { circleCIApiRef } from '../api';\nimport type { CITableBuildInfo } from '../components/BuildsPage/lib/CITable';\nimport { CIRCLECI_ANNOTATION } from '../constants';\n\nconst makeReadableStatus = (status: string | undefined) => {\n  if (!status) return '';\n  return ({\n    retried: 'Retried',\n    canceled: 'Canceled',\n    infrastructure_fail: 'Infra fail',\n    timedout: 'Timedout',\n    not_run: 'Not run',\n    running: 'Running',\n    failed: 'Failed',\n    queued: 'Queued',\n    scheduled: 'Scheduled',\n    not_running: 'Not running',\n    no_tests: 'No tests',\n    fixed: 'Fixed',\n    success: 'Success',\n  } as Record<string, string>)[status];\n};\n\nconst mapWorkflowDetails = (buildData: BuildSummary) => {\n  // Workflows should be an object: fixed in https://github.com/worldturtlemedia/circleci-api/pull/787\n  const { workflows } = (buildData as any) ?? {};\n\n  return {\n    id: workflows?.workflow_id,\n    url: `${buildData.build_url}/workflows/${workflows?.workflow_id}`,\n    jobName: workflows?.job_name,\n    name: workflows?.workflow_name,\n  };\n};\n\nconst mapSourceDetails = (buildData: BuildSummary) => {\n  const commitDetails = getOr({}, 'all_commit_details[0]', buildData);\n\n  return {\n    branchName: String(buildData.branch),\n    commit: {\n      hash: String(buildData.vcs_revision),\n      shortHash: String(buildData.vcs_revision).substr(0, 7),\n      committerName: buildData.committer_name,\n      url: commitDetails.commit_url,\n    },\n  };\n};\n\nconst mapUser = (buildData: BuildSummary) => ({\n  isUser: buildData?.user?.is_user || false,\n  login: buildData?.user?.login || 'none',\n  name: (buildData?.user as any)?.name,\n  avatarUrl: (buildData?.user as any)?.avatar_url,\n});\n\nexport const transform = (\n  buildsData: BuildSummary[],\n  restartBuild: { (buildId: number): Promise<void> },\n): CITableBuildInfo[] => {\n  return buildsData.map(buildData => {\n    const tableBuildInfo: CITableBuildInfo = {\n      id: String(buildData.build_num),\n      buildName: buildData.subject\n        ? buildData.subject +\n          (buildData.retry_of ? ` (retry of #${buildData.retry_of})` : '')\n        : '',\n      startTime: buildData.start_time,\n      stopTime: buildData.stop_time,\n      onRestartClick: () =>\n        typeof buildData.build_num !== 'undefined' &&\n        restartBuild(buildData.build_num),\n      source: mapSourceDetails(buildData),\n      workflow: mapWorkflowDetails(buildData),\n      user: mapUser(buildData),\n      status: makeReadableStatus(buildData.status),\n      buildUrl: buildData.build_url,\n    };\n    return tableBuildInfo;\n  });\n};\n\nexport const useProjectSlugFromEntity = () => {\n  const { entity } = useEntity();\n  const [vcs, owner, repo] = (\n    entity.metadata.annotations?.[CIRCLECI_ANNOTATION] ?? ''\n  ).split('/');\n  return { vcs, owner, repo };\n};\n\nexport function mapVcsType(vcs: string): GitType {\n  switch (vcs) {\n    case 'gh':\n    case 'github':\n      return GitType.GITHUB;\n    default:\n      return GitType.BITBUCKET;\n  }\n}\n\nexport function useBuilds() {\n  const { repo, owner, vcs } = useProjectSlugFromEntity();\n  const api = useApi(circleCIApiRef);\n  const errorApi = useApi(errorApiRef);\n\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n\n  const getBuilds = useCallback(\n    async ({ limit, offset }: { limit: number; offset: number }) => {\n      if (owner === '' || repo === '' || vcs === '') {\n        return Promise.reject('No credentials provided');\n      }\n\n      try {\n        return await api.getBuilds(\n          { limit, offset },\n          {\n            vcs: {\n              owner: owner,\n              repo: repo,\n              type: mapVcsType(vcs),\n            },\n          },\n        );\n      } catch (e) {\n        errorApi.post(e);\n        return Promise.reject(e);\n      }\n    },\n    [repo, owner, vcs, api, errorApi],\n  );\n\n  const restartBuild = async (buildId: number) => {\n    try {\n      await api.retry(buildId, {\n        vcs: {\n          owner: owner,\n          repo: repo,\n          type: GitType.GITHUB,\n        },\n      });\n    } catch (e) {\n      errorApi.post(e);\n    }\n  };\n\n  useEffect(() => {\n    getBuilds({ limit: 1, offset: 0 }).then(b => setTotal(b?.[0].build_num!));\n  }, [repo, getBuilds]);\n\n  const { loading, value, retry } = useAsyncRetry(\n    () =>\n      getBuilds({\n        offset: page * pageSize,\n        limit: pageSize,\n      }).then(builds => transform(builds ?? [], restartBuild)),\n    [page, pageSize, getBuilds],\n  );\n\n  const projectName = `${owner}/${repo}`;\n  return [\n    {\n      page,\n      pageSize,\n      loading,\n      value,\n      projectName,\n      total,\n    },\n    {\n      getBuilds,\n      setPage,\n      setPageSize,\n      restartBuild,\n      retry,\n    },\n  ] as const;\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { errorApiRef, useApi } from '@backstage/core';\nimport { useCallback, useMemo } from 'react';\nimport { useAsyncRetry } from 'react-use';\nimport { circleCIApiRef } from '../api';\nimport { useAsyncPolling } from './useAsyncPolling';\nimport { useProjectSlugFromEntity, mapVcsType } from './useBuilds';\n\nconst INTERVAL_AMOUNT = 1500;\nexport function useBuildWithSteps(buildId: number) {\n  const { vcs, repo, owner } = useProjectSlugFromEntity();\n  const api = useApi(circleCIApiRef);\n  const errorApi = useApi(errorApiRef);\n\n  const vcsOption = useMemo(\n    () => ({\n      owner: owner,\n      repo: repo,\n      type: mapVcsType(vcs),\n    }),\n    [owner, repo, vcs],\n  );\n\n  const getBuildWithSteps = useCallback(async () => {\n    if (owner === '' || repo === '' || vcs === '') {\n      return Promise.reject('No credentials provided');\n    }\n\n    try {\n      const options = {\n        vcs: vcsOption,\n      };\n      const build = await api.getBuild(buildId, options);\n      return Promise.resolve(build);\n    } catch (e) {\n      errorApi.post(e);\n      return Promise.reject(e);\n    }\n  }, [vcsOption, buildId, api, errorApi]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const restartBuild = async () => {\n    try {\n      await api.retry(buildId, {\n        vcs: vcsOption,\n      });\n    } catch (e) {\n      errorApi.post(e);\n    }\n  };\n\n  const { loading, value, retry } = useAsyncRetry(() => getBuildWithSteps(), [\n    getBuildWithSteps,\n  ]);\n\n  const { startPolling, stopPolling } = useAsyncPolling(\n    getBuildWithSteps,\n    INTERVAL_AMOUNT,\n  );\n\n  return [\n    { loading, value, retry },\n    {\n      restartBuild,\n      getBuildWithSteps,\n      startPolling,\n      stopPolling,\n    },\n  ] as const;\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Breadcrumbs, InfoCard, Progress, Link } from '@backstage/core';\nimport { BuildWithSteps, BuildStepAction } from '../../api';\nimport {\n  Grid,\n  Box,\n  IconButton,\n  Typography,\n  Link as MaterialLink,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ActionOutput } from './lib/ActionOutput/ActionOutput';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { useBuildWithSteps } from '../../state/useBuildWithSteps';\n\nconst IconLink = (IconButton as any) as typeof MaterialLink;\n\nconst BuildName = ({ build }: { build?: BuildWithSteps }) => (\n  <Box display=\"flex\" alignItems=\"center\">\n    #{build?.build_num} - {build?.subject}\n    <IconLink href={build?.build_url} target=\"_blank\">\n      <LaunchIcon />\n    </IconLink>\n  </Box>\n);\n\nconst useStyles = makeStyles(theme => ({\n  neutral: {},\n  failed: {\n    position: 'relative',\n    '&:after': {\n      pointerEvents: 'none',\n      content: '\"\"',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      left: 0,\n      bottom: 0,\n      boxShadow: `inset 4px 0px 0px ${theme.palette.error.main}`,\n    },\n  },\n  running: {\n    position: 'relative',\n    '&:after': {\n      pointerEvents: 'none',\n      content: '\"\"',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      left: 0,\n      bottom: 0,\n      boxShadow: `inset 4px 0px 0px ${theme.palette.info.main}`,\n    },\n  },\n  cardContent: {\n    backgroundColor: theme.palette.background.default,\n  },\n  success: {\n    position: 'relative',\n    '&:after': {\n      pointerEvents: 'none',\n      content: '\"\"',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      left: 0,\n      bottom: 0,\n      boxShadow: `inset 4px 0px 0px ${theme.palette.success.main}`,\n    },\n  },\n}));\n\nconst pickClassName = (\n  classes: ReturnType<typeof useStyles>,\n  build: BuildWithSteps = {} as BuildWithSteps,\n) => {\n  if (build.failed) return classes.failed;\n  if (['running', 'queued'].includes(build.status!)) return classes.running;\n  if (build.status === 'success') return classes.success;\n\n  return classes.neutral;\n};\n\nconst ActionsList = ({\n  actions,\n}: {\n  actions: BuildStepAction[];\n  name: string;\n}) => {\n  const classes = useStyles();\n  return (\n    <>\n      {actions.map((action: BuildStepAction) => (\n        <ActionOutput\n          className={action.failed ? classes.failed : classes.success}\n          action={action}\n          name={action.name}\n          url={action.output_url || ''}\n        />\n      ))}\n    </>\n  );\n};\n\nconst BuildsList = ({ build }: { build?: BuildWithSteps }) => (\n  <Box>\n    {build &&\n      build.steps &&\n      build.steps.map(\n        ({ name, actions }: { name: string; actions: BuildStepAction[] }) => (\n          <ActionsList key={name} name={name} actions={actions} />\n        ),\n      )}\n  </Box>\n);\n\nexport const BuildWithStepsPage = () => {\n  const { buildId = '' } = useParams();\n  const classes = useStyles();\n  const [{ loading, value }, { startPolling, stopPolling }] = useBuildWithSteps(\n    parseInt(buildId, 10),\n  );\n\n  useEffect(() => {\n    startPolling();\n    return () => stopPolling();\n  }, [buildId, startPolling, stopPolling]);\n\n  return (\n    <>\n      <Box mb={3}>\n        <Breadcrumbs aria-label=\"breadcrumb\">\n          <Link to=\"..\">All builds</Link>\n          <Typography>Build details</Typography>\n        </Breadcrumbs>\n      </Box>\n      <Grid container spacing={3} direction=\"column\">\n        <Grid item>\n          <InfoCard\n            className={pickClassName(classes, value)}\n            title={<BuildName build={value} />}\n            cardClassName={classes.cardContent}\n          >\n            {loading ? <Progress /> : <BuildsList build={value} />}\n          </InfoCard>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport dayjs from 'dayjs';\nimport durationPlugin from 'dayjs/plugin/duration';\nimport relativeTimePlugin from 'dayjs/plugin/relativeTime';\n\ndayjs.extend(durationPlugin);\ndayjs.extend(relativeTimePlugin);\n\ntype DateTimeObject = Date | string | number | undefined;\n\nexport function relativeTimeTo(time: DateTimeObject, withoutSuffix = false) {\n  return dayjs().to(dayjs(time), withoutSuffix);\n}\n\nexport function durationHumanized(\n  startTime: DateTimeObject,\n  endTime: DateTimeObject,\n) {\n  return dayjs.duration(dayjs(startTime).diff(dayjs(endTime))).humanize();\n}\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport {\n  Avatar,\n  Link,\n  Typography,\n  Box,\n  IconButton,\n  makeStyles,\n} from '@material-ui/core';\nimport RetryIcon from '@material-ui/icons/Replay';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { Link as RouterLink, generatePath } from 'react-router-dom';\nimport {\n  StatusError,\n  StatusWarning,\n  StatusOK,\n  StatusPending,\n  StatusRunning,\n  Table,\n  TableColumn,\n} from '@backstage/core';\nimport { durationHumanized, relativeTimeTo } from '../../../../util';\nimport { circleCIBuildRouteRef } from '../../../../route-refs';\n\nexport type CITableBuildInfo = {\n  id: string;\n  buildName: string;\n  buildUrl?: string;\n  startTime?: string;\n  stopTime?: string;\n  source: {\n    branchName: string;\n    commit: {\n      hash: string;\n      shortHash: string;\n      url: string;\n      committerName?: string;\n    };\n  };\n  status: string;\n  tests?: {\n    total: number;\n    passed: number;\n    skipped: number;\n    failed: number;\n    testUrl: string; // fixme better name\n  };\n  workflow: {\n    id: string;\n    url: string;\n    name?: string;\n    jobName?: string;\n  };\n  user: {\n    isUser: boolean;\n    login: string;\n    name?: string;\n    avatarUrl?: string;\n  };\n  onRestartClick: () => void;\n};\n\n// retried, canceled, infrastructure_fail, timedout, not_run, running, failed, queued, scheduled, not_running, no_tests, fixed, success\nconst getStatusComponent = (status: string | undefined = '') => {\n  switch (status.toLocaleLowerCase('en-US')) {\n    case 'queued':\n    case 'scheduled':\n      return <StatusPending />;\n    case 'running':\n      return <StatusRunning />;\n    case 'failed':\n      return <StatusError />;\n    case 'success':\n      return <StatusOK />;\n    case 'canceled':\n    default:\n      return <StatusWarning />;\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n      verticalAlign: 'center',\n    },\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n}));\n\nconst SourceInfo = ({ build }: { build: CITableBuildInfo }) => {\n  const classes = useStyles();\n  const { user, source } = build;\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" className={classes.root}>\n      <Avatar alt={user.name} src={user.avatarUrl} className={classes.small} />\n      <Box>\n        <Typography variant=\"button\">{source?.branchName}</Typography>\n        <Typography variant=\"body1\">\n          {source?.commit?.url !== undefined ? (\n            <Link href={source?.commit?.url} target=\"_blank\">\n              {source?.commit.shortHash}\n            </Link>\n          ) : (\n            source?.commit.shortHash\n          )}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst generatedColumns: TableColumn[] = [\n  {\n    title: 'ID',\n    field: 'id',\n    type: 'numeric',\n    width: '80px',\n  },\n  {\n    title: 'Build',\n    field: 'buildName',\n    highlight: true,\n    width: '20%',\n    render: (row: Partial<CITableBuildInfo>) => (\n      <Link\n        component={RouterLink}\n        to={`${generatePath(circleCIBuildRouteRef.path, {\n          buildId: row.id!,\n        })}`}\n      >\n        {row.buildName ? row.buildName : row?.workflow?.name}\n      </Link>\n    ),\n  },\n  {\n    title: 'Job',\n    field: 'buildName',\n    highlight: true,\n    render: (row: Partial<CITableBuildInfo>) => (\n      <Link href={row?.buildUrl} target=\"_blank\">\n        <Box display=\"flex\" alignItems=\"center\">\n          <LaunchIcon fontSize=\"small\" color=\"disabled\" />\n          <Box mr={1} />\n          {row?.workflow?.jobName}\n        </Box>\n      </Link>\n    ),\n  },\n  {\n    title: 'Source',\n    field: 'source.commit.hash',\n    highlight: true,\n    render: (row: Partial<CITableBuildInfo>) => (\n      <SourceInfo build={row as any} />\n    ),\n  },\n  {\n    title: 'Status',\n    field: 'status',\n    render: (row: Partial<CITableBuildInfo>) => (\n      <Box display=\"flex\" alignItems=\"center\">\n        {getStatusComponent(row.status)}\n        <Box mr={1} />\n        <Typography variant=\"button\">{row.status}</Typography>\n      </Box>\n    ),\n  },\n  {\n    title: 'Time',\n    field: 'startTime',\n    render: (row: Partial<CITableBuildInfo>) => (\n      <>\n        <Typography variant=\"body2\">\n          run {relativeTimeTo(row?.startTime)}\n        </Typography>\n        <Typography variant=\"body2\">\n          took {durationHumanized(row?.startTime, row?.stopTime)}\n        </Typography>\n      </>\n    ),\n  },\n  {\n    title: 'Workflow',\n    field: 'workflow.name',\n  },\n  {\n    title: 'Actions',\n    width: '10%',\n    render: (row: Partial<CITableBuildInfo>) => (\n      <IconButton onClick={row.onRestartClick}>\n        <RetryIcon />\n      </IconButton>\n    ),\n  },\n];\n\ntype Props = {\n  loading: boolean;\n  retry: () => void;\n  builds: CITableBuildInfo[];\n  projectName: string;\n  page: number;\n  onChangePage: (page: number) => void;\n  total: number;\n  pageSize: number;\n  onChangePageSize: (pageSize: number) => void;\n};\n\nexport const CITable = ({\n  projectName,\n  loading,\n  pageSize,\n  page,\n  retry,\n  builds,\n  onChangePage,\n  onChangePageSize,\n  total,\n}: Props) => {\n  return (\n    <Table\n      isLoading={loading}\n      options={{\n        paging: true,\n        pageSize,\n        padding: 'dense',\n        pageSizeOptions: [10, 20, 50],\n      }}\n      totalCount={total}\n      page={page}\n      actions={[\n        {\n          icon: () => <RetryIcon />,\n          tooltip: 'Refresh Data',\n          isFreeAction: true,\n          onClick: () => retry(),\n        },\n      ]}\n      data={builds}\n      onChangePage={onChangePage}\n      onChangeRowsPerPage={onChangePageSize}\n      title={\n        <Box display=\"flex\" alignItems=\"center\">\n          <GitHubIcon />\n          <Box mr={1} />\n          <Typography variant=\"h6\">{projectName}</Typography>\n        </Box>\n      }\n      columns={generatedColumns}\n    />\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { CITable } from '../CITable';\nimport { useBuilds } from '../../../../state';\n\nexport const Builds = () => {\n  const [\n    { total, loading, value, projectName, page, pageSize },\n    { setPage, retry, setPageSize },\n  ] = useBuilds();\n  return (\n    <CITable\n      total={total}\n      loading={loading}\n      retry={retry}\n      builds={value ?? []}\n      projectName={projectName}\n      page={page}\n      onChangePage={setPage}\n      pageSize={pageSize}\n      onChangePageSize={setPageSize}\n    />\n  );\n};\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { Builds } from './lib/Builds';\nimport { Grid } from '@material-ui/core';\n\nexport const BuildsPage = () => (\n  <Grid container spacing={3} direction=\"column\">\n    <Grid item>\n      <Builds />\n    </Grid>\n  </Grid>\n);\n","/*\n * Copyright 2020 Spotify AB\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Routes, Route } from 'react-router';\nimport { circleCIRouteRef, circleCIBuildRouteRef } from '../route-refs';\nimport { BuildWithStepsPage } from './BuildWithStepsPage/';\nimport { BuildsPage } from './BuildsPage';\nimport { CIRCLECI_ANNOTATION } from '../constants';\nimport { Entity } from '@backstage/catalog-model';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { MissingAnnotationEmptyState } from '@backstage/core';\n\nexport const isCircleCIAvailable = (entity: Entity) =>\n  Boolean(entity.metadata.annotations?.[CIRCLECI_ANNOTATION]);\n\ntype Props = {\n  /** @deprecated The entity is now grabbed from context instead */\n  entity?: Entity;\n};\n\nexport const Router = (_props: Props) => {\n  const { entity } = useEntity();\n\n  if (!isCircleCIAvailable(entity)) {\n    return <MissingAnnotationEmptyState annotation={CIRCLECI_ANNOTATION} />;\n  }\n\n  return (\n    <Routes>\n      <Route path={`/${circleCIRouteRef.path}`} element={<BuildsPage />} />\n      <Route\n        path={`/${circleCIBuildRouteRef.path}`}\n        element={<BuildWithStepsPage />}\n      />\n    </Routes>\n  );\n};\n"],"names":["useStyles","makeStyles","Link","RouterLink"],"mappings":"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"}